//Without Overlapping

	AREA sam,CODE,READONLY
	LDR r0,=0x40000000;
	LDR r1,=0x40000050;
	LDR r2,[r0],#0x4;
L	LDR r3,[r0],#0x4;
	STR r3,[r1],#0x4;
	SUBS r2,r2,#01;
	BNE L
	end
-----------------------------------------------------------------------------------------------------------
//With Overlap

	AREA sam,CODE,READONLY
start
	LDR r0,=0x40000000 
	LDR r2,[r0],#0x4 
	add r3,r0,r2, LSL #2 
L 	ldr r4,[r0],#0x4 
	str r4,[r3],#0x4 
	subs r2,r2,#01 
	BNE L 
l 	B l
end

-----------------------------------------------------------------------------------------------------------

// ax^2 + bx + c

	AREA quadexp,CODE,READONLY ; ax^2 + bx + c
	
	LDR r0,=0x40000000
	LDM r0,{r1-r4} ; r1,r2,r3,r4 -> x,a,b,c
	MUL r5,r1,r1 ;
	MUL r2,r5,r2 ;
	MUL r1,r3,r1 ;
	ADD r1,r1,r2 ;
	ADD r1,r1,r4 ;
	str r1,[r0,#0x10]
l	b l
	END

-----------------------------------------------------------------------------------------------------------

//b^2 - 4ac 

	AREA rootexp,CODE,READONLY ; b^2 - 4ac 
	LDR r0,=0x40000000 
	LDM r0,{r1-r3}
	MUL r4,r2,r2
	LSL r1,#2
	MUL r5,r1,r3
	SUB r6,r4,r5
	STR r6,[r0,#0x0c]
l	b l
	END

-----------------------------------------------------------------------------------------------------------

//Factorial

	AREA factstack, CODE, READONLY 

    LDR r0, =0x40000000
    LDR r1, [r0]
    MOV r2, #1
    BL lpush          ; Call the function lpush
    STR r2, [r0]
l   B l

lpush
    SUB sp, sp, #8
    STR lr, [sp, #4]
    STR r1, [sp]
    CMP r1, #1
    BGT loop
    B lpop

loop
    SUB r1, r1, #1
    BL lpush          ; Call the function lpush recursively
    B lpop

lpop
    LDR r1, [sp]
    LDR lr, [sp, #4]
    ADD sp, sp, #8
    CMP r1, #0
    MUL r2, r1, r2
    MOV pc, lr

    END

-----------------------------------------------------------------------------------------------------------

//Bubble Sort

;Bubble Sort
	AREA bubble,CODE,READONLY
START
	LDR R0,=0X40000000
	LDR R1,[R0]
OUTER
	MOV R2,R1
	LDR R0,=0X40000004
INNER
	LDR R4,[R0]
	LDR R5,[R0,#04]!
	CMP R4,R5
	BLE CONTINUE
	STR R4,[R0]
	STR R5,[R0,#-0X04]
CONTINUE
	SUBS R2,R2,#01
	BNE INNER
l
	B l
	END

-----------------------------------------------------------------------------------------------------------

//Binary Search

	AREA binary , CODE , READONLY 
	
	LDR r0,= 0x40000000 ;
	MOV r13,#0x00 ;
	LDRB r1,[r0] ;
	LDRB r2,[r0,#0x01]! ;
	MOV r3 ,#0x00 ;
	MOV r4,r1 ;
	
rep CMP r3,r4
	BGT exit 
	ADD r5,r3,r4
	LSR r5,#0x01 
	LDRB r7,[r0,r5]
	CMP r7,r2
	BGE HE
	ADD r3,r5,#0x01 ;
	B rep
	
HE 	BEQ found 
	SUB r4,r5,#0x01 
	B rep

found	MOV r13,#0x11
exit
L	B L
	END

------------------------------------------------------------------------------------------------------------

//Linear Search

;Linear Search
	AREA linear,CODE,READONLY
START
	LDR R0,=0X40000000
	LDR R5,=0X40000050
	MOV R6,#0XFF
	LDR R1,[R0],#0X04
	LDR R2,[R0],#0X04
REP
	LDR R3,[R0],#0X04
	CMP R3,R1
	BEQ FND
	SUBS R2,R2,#01
	BNE REP
	B STOP
FND	
	MOV R6,#0X11
STOP
	STR R6,[R5]
l
	B l
	END
	
